stages:
  - lint
  - deployment

variables:
  ANSIBLE_INVENTORY: 'ansible/inventory.ini'
  ANSIBLE_PLAYBOOK: 'ansible/playbook.yml'

lint:
  stage: lint
  image: alpine:latest
  before_script:
    - apk update && apk add --no-cache ansible ansible-lint
  script:
    - echo "Starting Syntax Check"
    - ansible-playbook $ANSIBLE_PLAYBOOK --syntax-check
    - echo "Ending Syntax Check"
    - echo "Starting Lint"
    - ansible-lint --profile min $ANSIBLE_PLAYBOOK
    - echo "Ending Lint"
  only:
    - main
    - merge_requests

deployment:
  stage: deployment
  image: alpine:latest
  before_script:
    - |
      if [ "$CI_PROJECT_NAME" == "codebase-local" ]; then
        apk update && apk add --no-cache ansible sshpass git openssh-client
        command -v ssh-agent >/dev/null || ( apk add --no-cache openssh-client )
        eval $(ssh-agent -s)
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "$SSH_HOST_KEY" | tr -d '\r' >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
      fi
  script:
    - |
      if [ "$CI_PROJECT_NAME" != "codebase-local" ]; then
        echo "This is not the 'codebase-local' repository, skipping deployment."
        exit 0
      fi
    - echo "Checking for changes in all.yml..."
    - |
      if git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep -q 'group_vars/all.yml'; then
        echo "'all.yml' has changed, executing Ansible command..."
        cd ansible
        ansible target -i inventory.ini -m include_role -a name=helm_deploy -e @group_vars/all.yml
      else
        echo "no changes in "all.yml""
        echo "executing whole playbook..."
        cd ansible
        ansible-playbook -i inventory.ini playbook.yml
      fi
    - echo "Deployment step concluded."
  only:
    - main
